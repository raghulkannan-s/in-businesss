# =========== SYSTEM SETUP ===========
[x] Setup GitHub repository
[x] Initialize Expo React Native project (JS)
[x] Setup Node.js + Express backend
[x] Connect MongoDB database (Atlas/local)
[x] Setup basic CORS, body-parser middleware

# =========== AUTHENTICATION ===========
[x] Backend: Create User model (username, email, password, role)
[x] Backend: Implement /register API with hashed passwords
[x] Backend: Implement /login API that returns JWT
[x] Backend: Create middleware to verify JWT
[x] Backend: Create middleware for role-based access (Admin, Moderator, Player)
[x] Frontend: Login/Register screens with API integration
[x] Frontend: Store JWT token in AsyncStorage
[x] Frontend: Create AuthContext for global login state

# =========== NAVIGATION ===========
[x] Setup React Navigation (AuthStack, TabNavigator)
[x] Protected routes after login
[x] Redirect to login if not authenticated

# =========== ELIGIBILITY SCREEN ===========
[x] Frontend: Create eligibility form (PlayerID input)
[x] Backend: /api/player/eligibility?id=...
[x] Display “Eligible” or “Not Eligible” on frontend

# =========== SPORTS HALL SCREEN ===========
[x] Frontend: Static grid UI for products (image, title, price)
[x] Optional: /api/products (future monetization)

# =========== OLD MATCHES ===========
[x] Backend: /api/matches?status=completed
[x] Backend: Match model to store match data
[x] Frontend: List of old matches with filter (date, team)
[x] Frontend: Match details page – show scoreboard, ranking, toss info

# =========== NEW MATCH SETUP ===========
[x] Backend: /api/matches (POST) – Create new match
[x] Backend: Create Match model
[x] Backend: Auto-select top 30 players from database
[x] Backend: Save teams A & B
[x] Frontend: Admin screen to input match name, date
[x] Frontend: Team builder screen (with auto-edit options)
[x] Frontend: Manually override team selection if needed

# =========== MATCH MANAGEMENT ===========
[x] Backend: /api/match/:id/toss – Save toss result
[x] Backend: /api/match/:id/start – Change status to “live”
[x] Frontend: Toss screen – select toss winner, choose Bat/Bowl
[x] Frontend: Match live setup – striker, non-striker, opening bowler

# =========== LIVE SCORE INPUT ===========
[x] Backend: /api/match/:id/ball – Save ball-by-ball data
[x] Ball Schema: striker, bowler, runs, extras, wicket
[x] Backend: Update team total, player stats
[x] Frontend: Score entry screen for moderator
[x] Dropdowns: Striker, Bowler, Outcome, Runs, Wicket type
[x] Frontend: Save and continue button for each ball

# =========== SCOREBOARD ===========
[x] Backend: /api/match/:id/scoreboard – fetch team stats
[x] Frontend: Live scoreboard display (Team A vs Team B)
[x] Frontend: Player stats (runs, balls, strike rate, overs, economy)

# =========== RANKINGS ===========
[x] Backend: /api/players/rankings – calculate from all matches
[x] Ranking Logic: 
     +₹5 per run
     –₹5 per dot
     +₹5 per dot bowled
     –₹5 per run conceded
     ₹50 per wicket (shared)
[x] Frontend: Leaderboard screen (sortable by runs, strike rate, wickets)

# =========== ADMIN PANEL ===========
[x] Admin screen – Match list, delete/edit match
[x] Promote/demote users (change roles)
[x] Force override player/team/score if bugged
[x] Backend: Admin route protection

# =========== PLAYER PROFILE ===========
[x] Frontend: My Stats screen – View personal match history
[x] Backend: /api/player/:id/matches – List of player’s games
[x] Aggregated batting/bowling averages

# =========== MISC ===========
[x] Setup `.env` files for frontend & backend
[x] Use Axios globally with token injection
[x] Handle token expiry (logout automatically)
[x] Loading spinners on API calls
[x] Global error handler for backend API
[x] 404 and generic error responses

# =========== REAL-TIME (OPTIONAL) ===========
[ ] Setup Socket.IO on backend for match updates
[ ] Connect frontend to listen for real-time score changes
[ ] Broadcast score updates to all connected clients

# =========== BONUS (FUTURE ADDITIONS) ===========
[ ] Add Firebase or Supabase auth alternative
[ ] Add push notifications on match updates
[ ] Add analytics for user engagement
[ ] Add download/export to Excel/PDF for scoreboards
[ ] Add Google Sheets sync for old match records
